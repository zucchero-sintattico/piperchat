services:
  monitoring-service:
    image: piperchat
    command: ['npm', 'run', '--workspace', './services/monitoring', 'start']
    expose:
      - ${MONITORING_SERVICE_PORT}
    depends_on:
      db-monitoring-service:
        condition: service_healthy
      broker:
        condition: service_healthy
    networks:
      monitoring-network:
      backend:
        aliases:
          - ${MONITORING_SERVICE_NAME}
      frontend:
    environment:
      - 'PORT=${MONITORING_SERVICE_PORT}'
      - 'AMQP_URI=${BROKER_URI}'
      - 'MONGO_URI=mongodb://db-monitoring-service:27017/monitoring'
      - 'SERVICES_URI=${USERS_SERVICE_URI},${MESSAGES_SERVICE_URI},${PIPERCHAT_SERVICE_URI},${WEBRTC_SERVICE_URI},${NOTIFICATIONS_SERVICE_URI}'
    labels:
      - |
        traefik.http.routers.monitoring-service.rule=
        (Method(`GET`) && Path(`/status`))

  db-monitoring-service:
    image: mongo
    expose:
      - '27017'
    volumes:
      - './.docker/db-monitoring:/data/db'
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`;
        mongo --quiet $${host}/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
    networks:
      - monitoring-network

networks:
  monitoring-network:
