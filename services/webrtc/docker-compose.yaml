services:
  webrtc-service:
    image: piperchat
    command: ['npm', 'run', '--workspace', './services/piperchat', 'start']
    expose:
      - '${WEBRTC_SERVICE_PORT}'
    depends_on:
      db-webrtc-service:
        condition: service_healthy
      broker:
        condition: service_healthy
      coturn:
        condition: service_started
    networks:
      webrtc-network:
      backend:
        aliases:
          - ${WEBRTC_SERVICE_NAME}
      frontend:
    environment:
      - 'PORT=${WEBRTC_SERVICE_PORT}'
      - 'AMQP_URI=${BROKER_URI}'
      - 'MONGO_URI=mongodb://db-webrtc-service:27017/webrtc'
    labels:
      - |
        traefik.http.routers.webrtc-service.rule=
        (Method(`GET`) && Path(`/users/{username:[^/]+}/session`)) ||
        (Method(`GET`) && Path(`/servers/{serverId:[^/]+}/channels/{channelId:[^/]+}/session`)) ||
        (Method(`GET`) && Path(`/sessions/{sessionId:[^/]+}`)) ||
        (Method(`GET`) && PathPrefix(`/webrtc`))

  db-webrtc-service:
    image: mongo
    expose:
      - '27017'
    volumes:
      - './.docker/db-webrtc:/data/db'
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`;
        mongo --quiet $${host}/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
    networks:
      - webrtc-network

  coturn:
    image: flaviostutz/coturn
    ports:
      - 3478:3478
      - 3478:3478/udp
      - 5349:5349
      - 5349:5349/udp
    environment:
      - TURN_USERNAME=coturn
      - TURN_PASSWORD=coturn-password

networks:
  webrtc-network:
