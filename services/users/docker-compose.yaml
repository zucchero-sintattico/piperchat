services:
  users-service:
    image: piperchat
    command: ['npm', 'run', '--workspace', './services/users', 'start']
    expose:
      - '${USERS_SERVICE_PORT}'
    depends_on:
      db-users-service:
        condition: service_healthy
      broker:
        condition: service_healthy
    networks:
      users-network:
      backend:
        aliases:
          - ${USERS_SERVICE_NAME}
      frontend:
    environment:
      - 'PORT=${USERS_SERVICE_PORT}'
      - 'AMQP_URI=${BROKER_URI}'
      - 'MONGO_URI=mongodb://db-users-service:27017/users'
    labels:
      - |
        traefik.http.routers.users-service.rule=
        (Method(`POST`) && Path(`/auth/{p:(login|register|logout|refresh-token)}`)) ||
        (Method(`PUT`) && Path(`/profile/{p:(photo|description)}`)) ||
        (Method(`GET`) && Path(`/friends`)) ||
        (Method(`GET`, `POST`) && Path(`/friends/requests`)) ||
        (Method(`GET`) && Path(`/users/{username:[^/]+}/{i:(status|photo|description)}`))

  db-users-service:
    image: mongo
    expose:
      - '27017'
    volumes:
      - './.docker/db-users:/data/db'
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`;
        mongo --quiet $${host}/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
    networks:
      - users-network

networks:
  users-network:
