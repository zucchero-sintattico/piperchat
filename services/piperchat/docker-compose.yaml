services:
  piperchat-service:
    image: piperchat
    command: ['npm', 'run', '--workspace', './services/piperchat', 'start']
    expose:
      - '${PIPERCHAT_SERVICE_PORT}'
    depends_on:
      db-piperchat-service:
        condition: service_healthy
      broker:
        condition: service_healthy
    networks:
      piperchat-network:
      backend:
        aliases:
          - ${PIPERCHAT_SERVICE_NAME}
      frontend:
    environment:
      - 'PORT=${PIPERCHAT_SERVICE_PORT}'
      - 'AMQP_URI=${BROKER_URI}'
      - 'MONGO_URI=mongodb://db-piperchat-service:27017/piperchat'
    labels:
      - |
        traefik.http.routers.piperchat-service.rule=Host(`api.localhost`) &&
        ((Method(`GET`, `POST`) && Path(`/servers`)) ||
        (Method(`GET`, `PUT`, `DELETE`) && Path(`/servers/{serverId:[^/]+}`)) ||
        (Method(`GET`, `POST`, `DELETE`) && Path(`/servers/{serverId:[^/]+}/participants`)) ||
        (Method(`DELETE`) && Path(`/servers/{serverId:[^/]+}/participants/{userId:[^/]+}`)) ||
        (Method(`GET`, `POST`) && Path(`/servers/{serverId:[^/]+}/channels`)) ||
        (Method(`GET`, `PUT`, `DELETE`) && Path(`/servers/{serverId:[^/]+}/channels/{channelId:[^/]+}`)))

  db-piperchat-service:
    image: mongo
    expose:
      - '27017'
    volumes:
      - './.docker/db-piperchat:/data/db'
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`;
        mongo --quiet $${host}/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
    networks:
      - piperchat-network

networks:
  piperchat-network:
